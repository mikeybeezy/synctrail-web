{"ast":null,"code":"import axios from 'axios';\nimport humps from 'humps';\n\nlet userToken = () => JSON.parse(localStorage.getItem('userToken'));\n\nexport const convertRequest = data => humps.decamelizeKeys(data);\nexport const convertResponse = data => humps.camelizeKeys(data);\nconst API_URL = \"http://localhost:3000\"; // const API_URL = process.env.REACT_APP_API_URL;\n\nconst formatURL = uri => `${API_URL}${uri}`;\n\nexport const handleResponse = response => ({ ...convertResponse(response.data)\n});\nexport const errorResponse = error => ({\n  errors: convertResponse(error.response.data.errors)\n});\naxios.interceptors.request.use(async config => {\n  config.headers.Authorization = userToken();\n  config.headers.OrganizationToekn = localStorage.getItem('organiToken');\n  config.headers.post['Content-Type'] = \"application/json\";\n  return config;\n});\nexport const makeGETRequest = function (uri) {\n  let queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return axios.get(formatURL(uri), {\n    params: convertRequest(queryParams)\n  });\n};\nexport const makePOSTRequest = function (uri, body) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return axios.post(formatURL(uri), convertRequest(body), config);\n};\nexport const makePUTRequest = function (uri, body) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return axios.put(formatURL(uri), convertRequest(body), config);\n};\nexport const makeDELETERequest = function (uri, body) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return axios.delete(formatURL(uri), convertRequest(body), config);\n};\nexport const makeFormDataPOSTRequest = function (uri, body) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return axios.post(formatURL(uri), body, config);\n};\nexport const makeFormDataPUTRequest = function (uri, body) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return axios.put(formatURL(uri), body, config);\n};","map":{"version":3,"sources":["/home/hp/Projects/SyncTrail/frontend/shared-lib/src/Axios.js"],"names":["axios","humps","userToken","JSON","parse","localStorage","getItem","convertRequest","data","decamelizeKeys","convertResponse","camelizeKeys","API_URL","formatURL","uri","handleResponse","response","errorResponse","error","errors","interceptors","request","use","config","headers","Authorization","OrganizationToekn","post","makeGETRequest","queryParams","get","params","makePOSTRequest","body","makePUTRequest","put","makeDELETERequest","delete","makeFormDataPOSTRequest","makeFormDataPUTRequest"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport humps from 'humps';\n\nlet userToken = () => JSON.parse(localStorage.getItem('userToken'));\n\nexport const convertRequest = (data) => humps.decamelizeKeys(data);\nexport const convertResponse = (data) => humps.camelizeKeys(data);\n\nconst API_URL = \"http://localhost:3000\"\n// const API_URL = process.env.REACT_APP_API_URL;\nconst formatURL = (uri) => `${API_URL}${uri}`;\n\nexport const handleResponse = (response) => ({ ...convertResponse(response.data) });\nexport const errorResponse = (error) => ({ errors: convertResponse(error.response.data.errors) });\n\naxios.interceptors.request.use(async (config) => {\n  config.headers.Authorization = userToken();\n  config.headers.OrganizationToekn = localStorage.getItem('organiToken')\n  config.headers.post['Content-Type'] = \"application/json\";\n  return config;\n});\n\nexport const makeGETRequest = (uri, queryParams = {}) => axios.get(formatURL(uri), { params: convertRequest(queryParams) });\nexport const makePOSTRequest = (uri, body, config = {}) => axios.post(formatURL(uri), convertRequest(body), config);\nexport const makePUTRequest = (uri, body, config = {}) => axios.put(formatURL(uri), convertRequest(body), config);\nexport const makeDELETERequest = (uri, body, config = {}) => axios.delete(formatURL(uri), convertRequest(body), config);\nexport const makeFormDataPOSTRequest = (uri, body, config = {}) => axios.post(formatURL(uri), body, config);\nexport const makeFormDataPUTRequest = (uri, body, config = {}) => axios.put(formatURL(uri), body, config);\n"]},"metadata":{},"sourceType":"module"}