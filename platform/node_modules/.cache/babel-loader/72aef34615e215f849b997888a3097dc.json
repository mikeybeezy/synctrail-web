{"ast":null,"code":"import { alertActions } from './';\nimport { userConstants } from '../constants';\nimport { history } from '../helpers';\nimport { makePOSTRequest, makePUTRequest, makeGETRequest } from 'shared-lib/src/Axios';\nexport const userActions = {\n  userLogin,\n  logout,\n  newPassword,\n  resetPassword,\n  resendConfirmation,\n  requestUnlock,\n  confirm\n};\nexport function userLogin(reqparams, from) {\n  return dispatch => {\n    try {\n      makePOSTRequest(`/api/v1/auth?app='platform'`, reqparams).then(response => {\n        if (response.data.status === \"ok\") {\n          dispatch({\n            type: userConstants.LOGIN_USER,\n            payload: response\n          });\n          localStorage.setItem('userToken', JSON.stringify(response.data.token));\n          localStorage.setItem('organiToken', response.data.org_id);\n          localStorage.setItem('userRole', response.data.user_role);\n          history.push(\"/\");\n          dispatch(alertActions.success(response.data.message));\n        } else {\n          dispatch(alertActions.error(response.data.message));\n        }\n      });\n    } catch (e) {\n      dispatch({\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e)\n      });\n    }\n  };\n}\nexport function logout() {\n  return function (dispatch) {\n    const user = localStorage.removeItem('userToken');\n\n    if (!user) {\n      try {\n        history.push(\"/login\");\n      } catch (e) {\n        dispatch({\n          type: userConstants.AUTHENTICATION_FAILURE,\n          payload: console.log(e)\n        });\n      }\n    }\n  };\n}\nexport function newPassword(reqparams) {\n  return dispatch => {\n    try {\n      makePOSTRequest('/api/v1/user/password/new', reqparams).then(response => {\n        if (response.data.status === \"ok\") {\n          dispatch({\n            type: userConstants.NEW_PASSWORD,\n            payload: response\n          });\n          history.push('/login');\n        } else {\n          dispatch(alertActions.error(response.data.error));\n          dispatch({\n            type: userConstants.NEW_PASSWORD_FAILURE,\n            payload: response.error\n          });\n        }\n      });\n    } catch (e) {\n      dispatch({\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e)\n      });\n    }\n  };\n}\nexport function resetPassword(reqparams) {\n  return dispatch => {\n    try {\n      makePUTRequest('/api/v1/user/password/update', reqparams).then(response => {\n        if (response.data.status === \"ok\") {\n          dispatch({\n            type: userConstants.RESET_PASSWORD,\n            payload: response\n          });\n          history.push('/login');\n          dispatch(alertActions.success(response.data.message));\n        } else {\n          dispatch(alertActions.error(response.data.error));\n          dispatch({\n            type: userConstants.RESET_PASSWORD_FAILURE,\n            payload: response.error\n          });\n        }\n      });\n    } catch (e) {\n      dispatch({\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e)\n      });\n    }\n  };\n}\nexport function resendConfirmation(reqparams) {\n  return dispatch => {\n    try {\n      makePOSTRequest('/api/v1/users/resend_confirmation', reqparams).then(response => {\n        if (response.data.error) {\n          dispatch(alertActions.error(response.data.message));\n        } else {\n          dispatch(alertActions.success(response.data.message));\n        }\n      });\n    } catch (e) {\n      dispatch({\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e)\n      });\n    }\n  };\n}\nexport function requestUnlock(reqparams) {\n  return dispatch => {\n    try {\n      makePOSTRequest('/api/v1/users/request_unlock', reqparams).then(response => {\n        if (response.data.error) {\n          dispatch(alertActions.error(response.data.message));\n        } else {\n          dispatch(alertActions.success(response.data.message));\n        }\n      });\n    } catch (e) {\n      dispatch({\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e)\n      });\n    }\n  };\n}\nexport function confirm(reqparams) {\n  return dispatch => {\n    try {\n      makeGETRequest('/users/confirmation?confirmation_token=' + reqparams).then(response => {\n        if (response.data.status === \"ok\") {\n          dispatch({\n            type: userConstants.CONFIRM_SUCCESS,\n            payload: response\n          });\n          history.push('/');\n          dispatch(alertActions.success(userConstants.CONFIRM_SUCCESS));\n        } else {\n          history.push('/');\n          dispatch(alertActions.error(response.data.error));\n          dispatch({\n            type: userConstants.CONFIRM_FAILURE,\n            payload: response.error\n          });\n        }\n      });\n    } catch (e) {\n      dispatch({\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e)\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/home/hp/Projects/SyncTrail/frontend/platform/src/actions/user.actions.js"],"names":["alertActions","userConstants","history","makePOSTRequest","makePUTRequest","makeGETRequest","userActions","userLogin","logout","newPassword","resetPassword","resendConfirmation","requestUnlock","confirm","reqparams","from","dispatch","then","response","data","status","type","LOGIN_USER","payload","localStorage","setItem","JSON","stringify","token","org_id","user_role","push","success","message","error","e","AUTHENTICATION_FAILURE","console","log","user","removeItem","NEW_PASSWORD","NEW_PASSWORD_FAILURE","RESET_PASSWORD","RESET_PASSWORD_FAILURE","CONFIRM_SUCCESS","CONFIRM_FAILURE"],"mappings":"AAAA,SAASA,YAAT,QAA6B,IAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,cAA1C,QAAgE,sBAAhE;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,SADyB;AAEzBC,EAAAA,MAFyB;AAGzBC,EAAAA,WAHyB;AAIzBC,EAAAA,aAJyB;AAKzBC,EAAAA,kBALyB;AAMzBC,EAAAA,aANyB;AAOzBC,EAAAA;AAPyB,CAApB;AAUP,OAAO,SAASN,SAAT,CAAmBO,SAAnB,EAA8BC,IAA9B,EAAoC;AACzC,SAAOC,QAAQ,IAAI;AACjB,QAAG;AACDb,MAAAA,eAAe,CAAE,6BAAF,EAAgCW,SAAhC,CAAf,CACCG,IADD,CACMC,QAAQ,IAAI;AACjB,YAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,IAA5B,EAAiC;AAC9BJ,UAAAA,QAAQ,CAAC;AAACK,YAAAA,IAAI,EAAEpB,aAAa,CAACqB,UAArB;AAAiCC,YAAAA,OAAO,EAACL;AAAzC,WAAD,CAAR;AACAM,UAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACC,IAAT,CAAcS,KAA7B,CAAlC;AACAJ,UAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCP,QAAQ,CAACC,IAAT,CAAcU,MAAlD;AACAL,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCP,QAAQ,CAACC,IAAT,CAAcW,SAA/C;AACA5B,UAAAA,OAAO,CAAC6B,IAAR,CAAa,GAAb;AACAf,UAAAA,QAAQ,CAAChB,YAAY,CAACgC,OAAb,CAAqBd,QAAQ,CAACC,IAAT,CAAcc,OAAnC,CAAD,CAAR;AACD,SAPF,MAOO;AACJjB,UAAAA,QAAQ,CAAChB,YAAY,CAACkC,KAAb,CAAmBhB,QAAQ,CAACC,IAAT,CAAcc,OAAjC,CAAD,CAAR;AACD;AACF,OAZD;AAaD,KAdD,CAcC,OAAME,CAAN,EAAQ;AACPnB,MAAAA,QAAQ,CAAE;AACRK,QAAAA,IAAI,EAAEpB,aAAa,CAACmC,sBADZ;AAERb,QAAAA,OAAO,EAAEc,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAFD,OAAF,CAAR;AAID;AACF,GArBD;AAsBD;AAED,OAAO,SAAS3B,MAAT,GAAkB;AACvB,SAAO,UAAUQ,QAAV,EAAoB;AACzB,UAAMuB,IAAI,GAAGf,YAAY,CAACgB,UAAb,CAAwB,WAAxB,CAAb;;AACA,QAAG,CAACD,IAAJ,EAAS;AACP,UAAG;AACDrC,QAAAA,OAAO,CAAC6B,IAAR,CAAa,QAAb;AACD,OAFD,CAEC,OAAMI,CAAN,EAAQ;AACPnB,QAAAA,QAAQ,CAAE;AACRK,UAAAA,IAAI,EAAEpB,aAAa,CAACmC,sBADZ;AAERb,UAAAA,OAAO,EAAEc,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAFD,SAAF,CAAR;AAID;AACF;AACF,GAZD;AAaD;AAED,OAAO,SAAS1B,WAAT,CAAqBK,SAArB,EAAgC;AACrC,SAAOE,QAAQ,IAAI;AACjB,QAAG;AACDb,MAAAA,eAAe,CAAC,2BAAD,EAA8BW,SAA9B,CAAf,CACCG,IADD,CACMC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,IAA5B,EAAiC;AAC/BJ,UAAAA,QAAQ,CAAC;AAACK,YAAAA,IAAI,EAAEpB,aAAa,CAACwC,YAArB;AAAmClB,YAAAA,OAAO,EAAEL;AAA5C,WAAD,CAAR;AACAhB,UAAAA,OAAO,CAAC6B,IAAR,CAAa,QAAb;AACD,SAHD,MAGM;AACJf,UAAAA,QAAQ,CAAChB,YAAY,CAACkC,KAAb,CAAmBhB,QAAQ,CAACC,IAAT,CAAce,KAAjC,CAAD,CAAR;AACAlB,UAAAA,QAAQ,CAAC;AAACK,YAAAA,IAAI,EAAEpB,aAAa,CAACyC,oBAArB;AAA2CnB,YAAAA,OAAO,EAAEL,QAAQ,CAACgB;AAA7D,WAAD,CAAR;AACD;AACF,OATD;AAUD,KAXD,CAWC,OAAMC,CAAN,EAAQ;AACPnB,MAAAA,QAAQ,CAAE;AACRK,QAAAA,IAAI,EAAEpB,aAAa,CAACmC,sBADZ;AAERb,QAAAA,OAAO,EAAEc,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAFD,OAAF,CAAR;AAID;AACF,GAlBD;AAmBD;AAED,OAAO,SAASzB,aAAT,CAAuBI,SAAvB,EAAkC;AACvC,SAAOE,QAAQ,IAAI;AACjB,QAAG;AACDZ,MAAAA,cAAc,CAAC,8BAAD,EAAiCU,SAAjC,CAAd,CACCG,IADD,CACMC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,IAA5B,EAAiC;AAC/BJ,UAAAA,QAAQ,CAAC;AAACK,YAAAA,IAAI,EAAEpB,aAAa,CAAC0C,cAArB;AAAqCpB,YAAAA,OAAO,EAAEL;AAA9C,WAAD,CAAR;AACAhB,UAAAA,OAAO,CAAC6B,IAAR,CAAa,QAAb;AACAf,UAAAA,QAAQ,CAAChB,YAAY,CAACgC,OAAb,CAAqBd,QAAQ,CAACC,IAAT,CAAcc,OAAnC,CAAD,CAAR;AACD,SAJD,MAIM;AACJjB,UAAAA,QAAQ,CAAChB,YAAY,CAACkC,KAAb,CAAmBhB,QAAQ,CAACC,IAAT,CAAce,KAAjC,CAAD,CAAR;AACAlB,UAAAA,QAAQ,CAAC;AAACK,YAAAA,IAAI,EAAEpB,aAAa,CAAC2C,sBAArB;AAA6CrB,YAAAA,OAAO,EAAEL,QAAQ,CAACgB;AAA/D,WAAD,CAAR;AACD;AACF,OAVD;AAWD,KAZD,CAYC,OAAMC,CAAN,EAAQ;AACPnB,MAAAA,QAAQ,CAAE;AACRK,QAAAA,IAAI,EAAEpB,aAAa,CAACmC,sBADZ;AAERb,QAAAA,OAAO,EAAEc,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAFD,OAAF,CAAR;AAID;AACF,GAnBD;AAoBD;AAED,OAAO,SAASxB,kBAAT,CAA4BG,SAA5B,EAAuC;AAC5C,SAAOE,QAAQ,IAAI;AACjB,QAAG;AACDb,MAAAA,eAAe,CAAC,mCAAD,EAAsCW,SAAtC,CAAf,CACCG,IADD,CACMC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,IAAT,CAAce,KAAjB,EAAuB;AACrBlB,UAAAA,QAAQ,CAAChB,YAAY,CAACkC,KAAb,CAAmBhB,QAAQ,CAACC,IAAT,CAAcc,OAAjC,CAAD,CAAR;AACD,SAFD,MAEM;AACJjB,UAAAA,QAAQ,CAAChB,YAAY,CAACgC,OAAb,CAAqBd,QAAQ,CAACC,IAAT,CAAcc,OAAnC,CAAD,CAAR;AACD;AACF,OAPD;AAQD,KATD,CASC,OAAME,CAAN,EAAQ;AACPnB,MAAAA,QAAQ,CAAE;AACRK,QAAAA,IAAI,EAAEpB,aAAa,CAACmC,sBADZ;AAERb,QAAAA,OAAO,EAAEc,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAFD,OAAF,CAAR;AAID;AACF,GAhBD;AAiBD;AAED,OAAO,SAASvB,aAAT,CAAuBE,SAAvB,EAAkC;AACvC,SAAOE,QAAQ,IAAI;AACjB,QAAG;AACDb,MAAAA,eAAe,CAAC,8BAAD,EAAiCW,SAAjC,CAAf,CACCG,IADD,CACMC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,IAAT,CAAce,KAAjB,EAAuB;AACrBlB,UAAAA,QAAQ,CAAChB,YAAY,CAACkC,KAAb,CAAmBhB,QAAQ,CAACC,IAAT,CAAcc,OAAjC,CAAD,CAAR;AACD,SAFD,MAEM;AACJjB,UAAAA,QAAQ,CAAChB,YAAY,CAACgC,OAAb,CAAqBd,QAAQ,CAACC,IAAT,CAAcc,OAAnC,CAAD,CAAR;AACD;AACF,OAPD;AAQD,KATD,CASC,OAAME,CAAN,EAAQ;AACPnB,MAAAA,QAAQ,CAAE;AACRK,QAAAA,IAAI,EAAEpB,aAAa,CAACmC,sBADZ;AAERb,QAAAA,OAAO,EAAEc,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAFD,OAAF,CAAR;AAID;AACF,GAhBD;AAiBD;AAGD,OAAO,SAAStB,OAAT,CAAiBC,SAAjB,EAA4B;AACjC,SAAOE,QAAQ,IAAI;AACjB,QAAG;AACDX,MAAAA,cAAc,CAAC,4CAA2CS,SAA5C,CAAd,CACCG,IADD,CACMC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,IAA5B,EAAiC;AAC/BJ,UAAAA,QAAQ,CAAC;AAACK,YAAAA,IAAI,EAAEpB,aAAa,CAAC4C,eAArB;AAAsCtB,YAAAA,OAAO,EAAEL;AAA/C,WAAD,CAAR;AACAhB,UAAAA,OAAO,CAAC6B,IAAR,CAAa,GAAb;AACAf,UAAAA,QAAQ,CAAChB,YAAY,CAACgC,OAAb,CAAqB/B,aAAa,CAAC4C,eAAnC,CAAD,CAAR;AACD,SAJD,MAIM;AACJ3C,UAAAA,OAAO,CAAC6B,IAAR,CAAa,GAAb;AACAf,UAAAA,QAAQ,CAAChB,YAAY,CAACkC,KAAb,CAAmBhB,QAAQ,CAACC,IAAT,CAAce,KAAjC,CAAD,CAAR;AACAlB,UAAAA,QAAQ,CAAC;AAACK,YAAAA,IAAI,EAAEpB,aAAa,CAAC6C,eAArB;AAAsCvB,YAAAA,OAAO,EAAEL,QAAQ,CAACgB;AAAxD,WAAD,CAAR;AACD;AACF,OAXD;AAYD,KAbD,CAaC,OAAMC,CAAN,EAAQ;AACPnB,MAAAA,QAAQ,CAAE;AACRK,QAAAA,IAAI,EAAEpB,aAAa,CAACmC,sBADZ;AAERb,QAAAA,OAAO,EAAEc,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAFD,OAAF,CAAR;AAID;AACF,GApBD;AAqBD","sourcesContent":["import { alertActions } from './';\nimport { userConstants } from '../constants';\nimport { history } from '../helpers';\nimport { makePOSTRequest, makePUTRequest, makeGETRequest } from 'shared-lib/src/Axios';\n\nexport const userActions = {\n  userLogin,\n  logout,\n  newPassword,\n  resetPassword,\n  resendConfirmation,\n  requestUnlock,\n  confirm\n};\n\nexport function userLogin(reqparams, from) {\n  return dispatch => {\n    try{\n      makePOSTRequest(`/api/v1/auth?app='platform'`, reqparams)\n      .then(response => {\n      \tif(response.data.status === \"ok\"){\n          dispatch({type: userConstants.LOGIN_USER, payload:response});\n          localStorage.setItem('userToken', JSON.stringify(response.data.token));\n          localStorage.setItem('organiToken', response.data.org_id);\n          localStorage.setItem('userRole', response.data.user_role);\n          history.push(\"/\");\n          dispatch(alertActions.success(response.data.message));\n        }else {\n          dispatch(alertActions.error(response.data.message));\n        }\n      })\n    }catch(e){\n      dispatch( {\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e),\n      })\n    }\n  }\n}\n\nexport function logout() {\n  return function (dispatch) {\n    const user = localStorage.removeItem('userToken');\n    if(!user){\n      try{\n        history.push(\"/login\");\n      }catch(e){\n        dispatch( {\n          type: userConstants.AUTHENTICATION_FAILURE,\n          payload: console.log(e),\n        })\n      }\n    }\n  }\n}\n\nexport function newPassword(reqparams) {\n  return dispatch => {\n    try{\n      makePOSTRequest('/api/v1/user/password/new', reqparams)\n      .then(response => {\n        if(response.data.status === \"ok\"){\n          dispatch({type: userConstants.NEW_PASSWORD, payload: response})\n          history.push('/login');\n        }else {\n          dispatch(alertActions.error(response.data.error));\n          dispatch({type: userConstants.NEW_PASSWORD_FAILURE, payload: response.error})\n        }\n      })\n    }catch(e){\n      dispatch( {\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e),\n      })\n    }\n  }\n}\n\nexport function resetPassword(reqparams) {\n  return dispatch => {\n    try{\n      makePUTRequest('/api/v1/user/password/update', reqparams)\n      .then(response => {\n        if(response.data.status === \"ok\"){\n          dispatch({type: userConstants.RESET_PASSWORD, payload: response})\n          history.push('/login');\n          dispatch(alertActions.success(response.data.message));\n        }else {\n          dispatch(alertActions.error(response.data.error));\n          dispatch({type: userConstants.RESET_PASSWORD_FAILURE, payload: response.error})\n        }\n      })\n    }catch(e){\n      dispatch( {\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e),\n      })\n    }\n  }\n}\n\nexport function resendConfirmation(reqparams) {\n  return dispatch => {\n    try{\n      makePOSTRequest('/api/v1/users/resend_confirmation', reqparams)\n      .then(response => {\n        if(response.data.error){\n          dispatch(alertActions.error(response.data.message));\n        }else {\n          dispatch(alertActions.success(response.data.message));\n        }\n      })\n    }catch(e){\n      dispatch( {\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e),\n      })\n    }\n  }\n}\n\nexport function requestUnlock(reqparams) {\n  return dispatch => {\n    try{\n      makePOSTRequest('/api/v1/users/request_unlock', reqparams)\n      .then(response => {\n        if(response.data.error){\n          dispatch(alertActions.error(response.data.message));\n        }else {\n          dispatch(alertActions.success(response.data.message));\n        }\n      })\n    }catch(e){\n      dispatch( {\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e),\n      })\n    }\n  }\n}\n\n\nexport function confirm(reqparams) {\n  return dispatch => {\n    try{\n      makeGETRequest('/users/confirmation?confirmation_token='+ reqparams)\n      .then(response => {\n        if(response.data.status === \"ok\"){\n          dispatch({type: userConstants.CONFIRM_SUCCESS, payload: response})\n          history.push('/');\n          dispatch(alertActions.success(userConstants.CONFIRM_SUCCESS));\n        }else {\n          history.push('/');\n          dispatch(alertActions.error(response.data.error));\n          dispatch({type: userConstants.CONFIRM_FAILURE, payload: response.error})\n        }\n      })\n    }catch(e){\n      dispatch( {\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e),\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}