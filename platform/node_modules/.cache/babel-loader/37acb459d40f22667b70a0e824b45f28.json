{"ast":null,"code":"import { alertActions } from './';\nimport { userConstants } from '../constants';\nimport { makePOSTRequest, makeGETRequest, makePUTRequest, makeDELETERequest } from 'shared-lib/src/Axios';\nexport const organizationActions = {\n  newOrganization,\n  getOrganization,\n  editOrganization,\n  destroyOrganization\n};\nexport function newOrganization(reqparams, closeModal) {\n  return dispatch => {\n    try {\n      dispatch({\n        type: userConstants.PAGE_LOADING\n      });\n      makePOSTRequest('/api/v1/organizations', reqparams).then(response => {\n        if (response.data.status === \"ok\") {\n          dispatch({\n            type: userConstants.NEW_ORGANIZATION,\n            payload: response\n          });\n          closeModal();\n          dispatch(alertActions.success(response.data.message));\n        } else {\n          dispatch(alertActions.error(response.data.error));\n        }\n      });\n    } catch (e) {\n      dispatch({\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e)\n      });\n    }\n  };\n}\nexport function getOrganization() {\n  return dispatch => {\n    try {\n      dispatch({\n        type: userConstants.PAGE_LOADING\n      });\n      makeGETRequest('/api/v1/organizations').then(response => {\n        if (response.data.status === \"ok\") {\n          dispatch({\n            type: userConstants.GET_ORGANIZATION,\n            payload: response\n          });\n        } else {\n          dispatch(alertActions.error(response.data.error));\n        }\n      });\n    } catch (e) {\n      dispatch({\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e)\n      });\n    }\n  };\n}\nexport function editOrganization(id) {\n  return function (dispatch) {\n    try {\n      dispatch({\n        type: userConstants.PAGE_LOADING\n      });\n      makeGETRequest(`/api/v1/organizations/${id}`).then(response => {\n        dispatch({\n          type: userConstants.EDIT_ORGANIZATION,\n          payload: response\n        });\n      });\n    } catch (e) {\n      dispatch({\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e)\n      });\n    }\n  };\n} // export function updateSite(client_id, id, reqparams) {\n//   return function (dispatch) {\n//     try{\n//       dispatch({ type: userConstants.PAGE_LOADING });\n//       makePUTRequest(`/api/v1/clients/${client_id}/sites/${id}`, reqparams)\n//       .then(response => {\n//         if(response.data.status === \"ok\"){\n//           history.push(`/admin/clients/${client_id}/sites`);\n//           dispatch({\n//             type: userConstants.UPDATE_SITE,\n//             payload: response\n//           })\n//         }else{\n//           dispatch({type: userConstants.SITE_ERROR, payload:response});\n//         }\n//       })\n//     }catch(e){\n//       dispatch( {\n//         type: userConstants.PROJECT_FAILURE,\n//         payload: console.log(e),\n//       })\n//     }\n//   }\n// }\n// export function destroySite(client_id, id) {\n//   return function (dispatch) {\n//     try{\n//       dispatch({ type: userConstants.PAGE_LOADING });\n//       makeDELETERequest(`/api/v1/clients/${client_id}/sites/${id}`)\n//       .then(response => {\n//         dispatch({\n//           type: userConstants.DESTROY_SITE,\n//           payload: response\n//         })\n//         dispatch(alertActions.success(response.data.message));\n//       })\n//     }catch(e){\n//       dispatch( {\n//         type: userConstants.AUTHENTICATION_FAILURE,\n//         payload: console.log(e),\n//       })\n//     }\n//   }\n// }","map":{"version":3,"sources":["/home/hp/Projects/SyncTrail/frontend/platform/src/actions/organization.actions.js"],"names":["alertActions","userConstants","makePOSTRequest","makeGETRequest","makePUTRequest","makeDELETERequest","organizationActions","newOrganization","getOrganization","editOrganization","destroyOrganization","reqparams","closeModal","dispatch","type","PAGE_LOADING","then","response","data","status","NEW_ORGANIZATION","payload","success","message","error","e","AUTHENTICATION_FAILURE","console","log","GET_ORGANIZATION","id","EDIT_ORGANIZATION"],"mappings":"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","sourcesContent":["import { alertActions } from './';\nimport { userConstants } from '../constants';\nimport { makePOSTRequest, makeGETRequest, makePUTRequest, makeDELETERequest } from 'shared-lib/src/Axios';\n\nexport const organizationActions = { \n  newOrganization, \n  getOrganization, \n  editOrganization, \n  destroyOrganization \n}\n\nexport function newOrganization(reqparams, closeModal) {\n  return dispatch => {\n    try{\n      dispatch({ type: userConstants.PAGE_LOADING });\n      makePOSTRequest('/api/v1/organizations', reqparams)\n      .then(response => {\n        if(response.data.status === \"ok\"){\n          dispatch({type: userConstants.NEW_ORGANIZATION, payload: response})\n          closeModal()\n          dispatch(alertActions.success(response.data.message));\n        }else {\n          dispatch(alertActions.error(response.data.error));\n        }\n      })\n    }catch(e){\n      dispatch( {\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e),\n      })\n    }\n  }\n}\n\nexport function getOrganization() {\n  return dispatch => {\n    try{\n      dispatch({ type: userConstants.PAGE_LOADING });\n      makeGETRequest('/api/v1/organizations')\n      .then(response => {\n        if(response.data.status === \"ok\"){\n          dispatch({type: userConstants.GET_ORGANIZATION, payload: response})\n        }else {\n          dispatch(alertActions.error(response.data.error));\n        }\n      })\n    }catch(e){\n      dispatch( {\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e),\n      })\n    }\n  }\n}\n\nexport function editOrganization(id) {\n  return function (dispatch) {\n    try{\n      dispatch({ type: userConstants.PAGE_LOADING });\n      makeGETRequest(`/api/v1/organizations/${id}`)\n      .then(response => {\n        dispatch({\n          type: userConstants.EDIT_ORGANIZATION,\n          payload: response\n        })\n      })\n    }catch(e){\n      dispatch( {\n        type: userConstants.AUTHENTICATION_FAILURE,\n        payload: console.log(e),\n      })\n    }\n  }\n}\n\n// export function updateSite(client_id, id, reqparams) {\n//   return function (dispatch) {\n//     try{\n//       dispatch({ type: userConstants.PAGE_LOADING });\n//       makePUTRequest(`/api/v1/clients/${client_id}/sites/${id}`, reqparams)\n//       .then(response => {\n//         if(response.data.status === \"ok\"){\n//           history.push(`/admin/clients/${client_id}/sites`);\n//           dispatch({\n//             type: userConstants.UPDATE_SITE,\n//             payload: response\n//           })\n//         }else{\n//           dispatch({type: userConstants.SITE_ERROR, payload:response});\n//         }\n//       })\n//     }catch(e){\n//       dispatch( {\n//         type: userConstants.PROJECT_FAILURE,\n//         payload: console.log(e),\n//       })\n//     }\n//   }\n// }\n\n\n// export function destroySite(client_id, id) {\n//   return function (dispatch) {\n//     try{\n//       dispatch({ type: userConstants.PAGE_LOADING });\n//       makeDELETERequest(`/api/v1/clients/${client_id}/sites/${id}`)\n//       .then(response => {\n//         dispatch({\n//           type: userConstants.DESTROY_SITE,\n//           payload: response\n//         })\n//         dispatch(alertActions.success(response.data.message));\n//       })\n//     }catch(e){\n//       dispatch( {\n//         type: userConstants.AUTHENTICATION_FAILURE,\n//         payload: console.log(e),\n//       })\n//     }\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}