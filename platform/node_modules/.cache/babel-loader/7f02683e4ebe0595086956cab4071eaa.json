{"ast":null,"code":"var _jsxFileName = \"/home/hp/Projects/SyncTrail/frontend/platform/src/App/components/auth/forgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { userActions } from '../../../actions';\nimport { textInput } from 'shared-lib/src/form-elements';\nimport { validation } from 'shared-lib/src/validation';\nimport { reduxForm, Field, reset } from \"redux-form\";\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewForm(props) {\n  _s();\n\n  const {\n    handleSubmit\n  } = props;\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const formSubmit = values => {\n    const {\n      from\n    } = location.state || {\n      from: {\n        pathname: \"/\"\n      }\n    };\n    dispatch(userActions.newPassword(values, from));\n    dispatch(reset('form'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"d-flex align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-4 offset-lg-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(formSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              type: \"email\",\n              component: textInput,\n              label: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"app-btn\",\n              children: \"Send reset password instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              className: \"btn btn-link\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewForm, \"GbYGBQuBzDFP3ryA9Nq5nJnvu8Y=\", false, function () {\n  return [useDispatch, useLocation];\n});\n\n_c = NewForm;\nNewForm = reduxForm({\n  form: 'form',\n  validate: validation\n})(NewForm);\n\nconst mapStateToProps = state => {\n  return {\n    email: \"\"\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userActions\n})(NewForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewForm\");","map":{"version":3,"sources":["/home/hp/Projects/SyncTrail/frontend/platform/src/App/components/auth/forgotPassword.js"],"names":["React","connect","useDispatch","Link","useLocation","userActions","textInput","validation","reduxForm","Field","reset","Button","NewForm","props","handleSubmit","dispatch","location","formSubmit","values","from","state","pathname","newPassword","form","validate","mapStateToProps","email"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEtB,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAME,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,UAAU,GAAIC,MAAD,IAAY;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAWH,QAAQ,CAACI,KAAT,IAAkB;AAAED,MAAAA,IAAI,EAAE;AAAEE,QAAAA,QAAQ,EAAE;AAAZ;AAAR,KAAnC;AACAN,IAAAA,QAAQ,CAACV,WAAW,CAACiB,WAAZ,CAAwBJ,MAAxB,EAAgCC,IAAhC,CAAD,CAAR;AACAJ,IAAAA,QAAQ,CAACL,KAAK,CAAC,MAAD,CAAN,CAAR;AACD,GAJD;;AAMA,sBACE;AAAM,IAAA,SAAS,EAAC,kDAAhB;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAEI,YAAY,CAACG,UAAD,CAA5B;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,IAAI,EAAC,OAAzB;AAAiC,cAAA,SAAS,EAAEX,SAA5C;AAAuD,cAAA,KAAK,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,QAA/B;AAAwC,cAAA,SAAS,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAQE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,QAAT;AAAkB,cAAA,SAAS,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAjCQM,O;UAGUV,W,EACAE,W;;;KAJVQ,O;AAmCTA,OAAO,GAAIJ,SAAS,CAAC;AACnBe,EAAAA,IAAI,EAAE,MADa;AAEnBC,EAAAA,QAAQ,EAAEjB;AAFS,CAAD,CAAT,CAGRK,OAHQ,CAAX;;AAMA,MAAMa,eAAe,GAAIL,KAAD,IAAW;AACjC,SAAO;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD,CAFD;;AAIA,eAAezB,OAAO,CAACwB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA0CO,OAA1C,CAAf","sourcesContent":["import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { userActions } from '../../../actions';\nimport { textInput } from 'shared-lib/src/form-elements';\nimport { validation } from 'shared-lib/src/validation';\nimport { reduxForm, Field, reset } from \"redux-form\";\nimport { Button } from 'react-bootstrap';\n\nfunction NewForm(props) {\n\n  const { handleSubmit} = props\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const formSubmit = (values) => {\n    const { from } = location.state || { from: { pathname: \"/\" } };\n    dispatch(userActions.newPassword(values, from));\n    dispatch(reset('form'));\n  }\n\n  return (\n    <main className=\"d-flex align-items-center justify-content-center\">\n      <div  className=\"container\">\n        <div className=\"col-lg-4 offset-lg-4\">\n          <h3 className=\"text-center\">Forgot Password</h3>\n          <form onSubmit={handleSubmit(formSubmit)}>\n            <div className=\"mb-2\">\n              <Field name=\"email\" type=\"email\" component={textInput} label=\"Email\"/>\n            </div>\n            <div className=\"mb-3 mt-4\">\n              <Button variant=\"primary\" type=\"submit\" className=\"app-btn\">Send reset password instructions</Button>\n            </div>\n\n            <div className=\"text-center\">\n              <Link to=\"/login\" className=\"btn btn-link\">Cancel</Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nNewForm =  reduxForm({\n  form: 'form',\n  validate: validation\n})(NewForm);\n\n\nconst mapStateToProps = (state) => {\n  return { email: \"\"  };\n};\n\nexport default connect(mapStateToProps, { userActions })(NewForm);\n"]},"metadata":{},"sourceType":"module"}