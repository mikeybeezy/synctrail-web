{"ast":null,"code":"import { userConstants } from '../constants';\nconst initialState = {\n  loading: false,\n  error: ''\n};\nexport function organization() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case userConstants.PAGE_LOADING:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case userConstants.GET_ORGANIZATION:\n      {\n        return { ...state,\n          organizationList: action.payload.data.data,\n          loading: false\n        };\n      }\n\n    case userConstants.NEW_ORGANIZATION:\n      {\n        let currentOrganization = action.payload.data.data;\n        const organizationList = [...state.organizationList, currentOrganization];\n        return { ...state,\n          organizationList: organizationList,\n          loading: false\n        };\n      }\n\n    case userConstants.EDIT_ORGANIZATION:\n      {\n        return { ...state,\n          editOrganization: action.payload.data.data,\n          loading: false\n        };\n      }\n\n    case userConstants.UPDATE_ORGANIZATION:\n      {\n        let currentOrganization = action.payload.data.data;\n        const organizationList = [...state.organizationList, currentOrganization];\n        const arr = organizationList.map((el, index) => el.id === organizationList.id ? { ...el,\n          ...action.payload.data\n        } : el);\n        console.log(\"arr\");\n        console.log(arr);\n        console.log(\"arr\");\n        return { ...state,\n          organizationList: organizationList,\n          loading: false\n        };\n      }\n\n    case userConstants.DESTROY_ORGANIZATION:\n      {\n        let id = action.payload.data.data.id;\n        return { ...state,\n          organizationList: state.organizationList.filter(item => item.id !== id),\n          loading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/hp/Projects/SyncTrail/frontend/platform/src/reducers/organization.reducer.js"],"names":["userConstants","initialState","loading","error","organization","state","action","type","PAGE_LOADING","GET_ORGANIZATION","organizationList","payload","data","NEW_ORGANIZATION","currentOrganization","EDIT_ORGANIZATION","editOrganization","UPDATE_ORGANIZATION","arr","map","el","index","id","console","log","DESTROY_ORGANIZATION","filter","item"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,KAAX;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAArB;AAEA,OAAO,SAASC,YAAT,GAAoD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAa,CAACQ,YAAnB;AAAiC;AAC/B,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AAED,SAAKF,aAAa,CAACS,gBAAnB;AAAqC;AACnC,eAAO,EACL,GAAGJ,KADE;AAELK,UAAAA,gBAAgB,EAAEJ,MAAM,CAACK,OAAP,CAAeC,IAAf,CAAoBA,IAFjC;AAGLV,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED,SAAKF,aAAa,CAACa,gBAAnB;AAAqC;AACnC,YAAIC,mBAAmB,GAAGR,MAAM,CAACK,OAAP,CAAeC,IAAf,CAAoBA,IAA9C;AACA,cAAMF,gBAAgB,GAAG,CAAC,GAAGL,KAAK,CAACK,gBAAV,EAA6BI,mBAA7B,CAAzB;AACA,eAAO,EACL,GAAGT,KADE;AAELK,UAAAA,gBAAgB,EAAEA,gBAFb;AAGLR,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED,SAAKF,aAAa,CAACe,iBAAnB;AAAsC;AACpC,eAAO,EACL,GAAGV,KADE;AAELW,UAAAA,gBAAgB,EAAEV,MAAM,CAACK,OAAP,CAAeC,IAAf,CAAoBA,IAFjC;AAGLV,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAEF,SAAKF,aAAa,CAACiB,mBAAnB;AAAwC;AACrC,YAAIH,mBAAmB,GAAGR,MAAM,CAACK,OAAP,CAAeC,IAAf,CAAoBA,IAA9C;AACA,cAAMF,gBAAgB,GAAG,CAAC,GAAGL,KAAK,CAACK,gBAAV,EAA6BI,mBAA7B,CAAzB;AACA,cAAMI,GAAG,GAAGR,gBAAgB,CAACS,GAAjB,CAAqB,CAACC,EAAD,EAAKC,KAAL,KAC/BD,EAAE,CAACE,EAAH,KAAUZ,gBAAgB,CAACY,EAA3B,GAAgC,EAAE,GAAGF,EAAL;AAAS,aAAGd,MAAM,CAACK,OAAP,CAAeC;AAA3B,SAAhC,GAAoEQ,EAD1D,CAAZ;AAIAG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEA,eAAO,EACL,GAAGnB,KADE;AAELK,UAAAA,gBAAgB,EAAEA,gBAFb;AAGLR,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED,SAAKF,aAAa,CAACyB,oBAAnB;AAAyC;AACvC,YAAIH,EAAE,GAAGhB,MAAM,CAACK,OAAP,CAAeC,IAAf,CAAoBA,IAApB,CAAyBU,EAAlC;AACA,eAAO,EACL,GAAGjB,KADE;AAELK,UAAAA,gBAAgB,EAAEL,KAAK,CAACK,gBAAN,CAAuBgB,MAAvB,CAA8BC,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAlD,CAFb;AAGLpB,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED;AACE,aAAOG,KAAP;AA9DJ;AAgED","sourcesContent":["import { userConstants } from '../constants';\nconst initialState = { loading: false, error: '' };\n\nexport function organization(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.PAGE_LOADING: {\n      return { \n        ...state, \n        loading: true \n      };\n    }\n\n    case userConstants.GET_ORGANIZATION: {\n      return {\n        ...state,\n        organizationList: action.payload.data.data,\n        loading: false\n      }\n    }\n\n    case userConstants.NEW_ORGANIZATION: {\n      let currentOrganization = action.payload.data.data\n      const organizationList = [...state.organizationList,  currentOrganization]\n      return {\n        ...state,\n        organizationList: organizationList,\n        loading: false,\n      }\n    }\n\n    case userConstants.EDIT_ORGANIZATION: {\n      return {\n        ...state,\n        editOrganization: action.payload.data.data,\n        loading: false\n      }\n    }\n\n   case userConstants.UPDATE_ORGANIZATION: {\n      let currentOrganization = action.payload.data.data\n      const organizationList = [...state.organizationList,  currentOrganization]\n      const arr = organizationList.map((el, index) =>\n        el.id === organizationList.id ? { ...el, ...action.payload.data } : el,\n      )\n\n      console.log(\"arr\")\n      console.log(arr)\n      console.log(\"arr\")\n\n      return {\n        ...state,\n        organizationList: organizationList,\n        loading: false\n      }\n    }\n\n    case userConstants.DESTROY_ORGANIZATION: {\n      let id = action.payload.data.data.id\n      return {\n        ...state,\n        organizationList: state.organizationList.filter(item => item.id !== id),\n        loading: false,\n      }\n    }\n  \n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}